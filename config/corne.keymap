/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MEDIA 1
#define NAV 2
#define NUM 3
#define SYM 4
#define FUN 5

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q       &kp W      &kp E       &kp R        &kp T   &kp Y &kp U         &kp I        &kp O      &kp P          &kp BSPC
   &kp LCTRL &mt LMETA A &mt LALT S &mt LCTRL D &mt LSHIFT F &kp G   &kp H &mt RSHIFT J  &mt RCTRL K  &mt RALT L &mt LMETA SEMI &kp SQT
   &kp LSHFT &kp Z       &kp X      &kp C       &kp V        &kp B   &kp N &kp M         &kp COMMA    &kp DOT    &kp FSLH       &kp ESC
                    &lt MEDIA ESC &lt NAV SPACE &kp TAB      &lt SYM RET &lt NUM BSPC    &lt FUN DEL
                        >;
                };
                media_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |     |     |     |     |     |   |     |      |      |      |      |      |
// | CTRL | META| CTRL| ALT |SHIFT|     |   |     |NEXT  |VOL_UP|VOL_DN|PREV  |      |
// | SHFT |     |     |     |     |     |   |     |BTCLR | BT_0 | BT_1 | BT_2 |      |
//                    |     |     |     |   | stop|play/p| mute |
                        bindings = <
   &kp TAB    &trans       &trans       &trans       &trans   &trans         &trans   &trans   &trans &trans    &trans &trans
   &kp CTRL   &kp LMETA &kp LALT &kp LCTRL &kp LSHIFT &trans   &trans &kp C_NEXT &kp C_VOL_UP &kp C_VOL_DOWN &kp C_PREV &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans      &trans   &bt BT_CLR   &bt BT_SEL 0   &bt BT_SEL 1 &bt BT_SEL 2  &trans
                          	        &trans     &trans       &trans      &kp C_STOP  &kp C_PP  &kp K_MUTE 
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |     |     |     |     |     |   | REDO| PASTE| COPY | CUT  | UNDO |      |
// | CTRL | META| CTRL| ALT |SHIFT|     |   | LEFT| DOWN | UP   | RIGHT| CAPS |      |
// | SHFT |     |     |     |     |     |   | INS | HOME | PGDWN| PG_UP| END |      |
//                    |     |     |     |   | ENT | BKSP| DEL |
                        bindings = <
   &kp TAB    &trans    &trans   &trans    &trans     &trans      &kp K_REDO   &kp K_PASTE &kp K_COPY   &kp K_CUT   &kp K_UNDO &trans
   &kp CTRL   &kp LMETA &kp LALT &kp LCTRL &kp LSHIFT &trans      &kp LEFT     &kp DOWN    &kp UP       &kp RIGHT   &kp CAPS   &trans
   &kp LSHFT  &trans    &trans   &trans    &trans     &trans      &kp INS      &kp HOME    &kp PG_UP    &kp PG_DN   &kp END    &trans
                             &trans     &trans       &trans       &kp RET      &kp BSPC   &kp DEL 
                        >;
                };


                num_layer {
// -----------------------------------------------------------------------------------------
// |  TAB | [/{ |  7  |  8  |  9  | ]/} |   |     |     |     |     |     | BKSP |
// | CTRL | :/; |  4  |  5  |  6  | +/= |   |     |shift| ctrl| alt | meta|      |
// | SHFT | ~/` |  1  |  2  |  3  | |/\ |   |     |     |     |     |     |      |
//                    | </, |  0  | -/_ |   |     |     |     |
                        bindings = <
   &kp TAB    &kp LBKT     &kp N7   &kp N8    &kp N9   &kp RBKT       &trans   &trans     &trans    &trans    &trans    &kp BSPC
   &kp LCTRL  &kp SEMI     &kp N4   &kp N5    &kp N6   &kp EQUAL      &trans   &kp RSHIFT &kp RCTRL &kp RALT  &kp RMETA &trans 
   &kp LSHFT  &kp GRAVE    &kp N1   &kp N2    &kp N3   &kp BSLH       &trans   &trans     &trans    &trans    &trans    &trans
                          	        &kp DOT   &kp N0   &kp MINUS      &trans   &trans     &trans
                        >;
                };
                sym_layer {
// -----------------------------------------------------------------------------------------
// |  TAB | { |  &  |  *  |  (  | } |   |     |     |     |     |     | BKSP |
// | CTRL | : |  $  |  %  |  ^  | + |   |     |shift| ctrl| alt | meta|      |
// | SHFT | ~ |  !  |  @  |  #  | | |   |     |     |     |     |     |      |
//                    | ( |  )  | _ |   |     |     |     |
                        bindings = <
   &kp TAB    &kp LBRC     &kp AMPS   &kp STAR   &kp LPAR   &kp RBRC       &trans   &trans     &trans    &trans    &trans    &kp BSPC
   &kp LCTRL  &kp COLON    &kp DLLR   &kp PRCNT  &kp CARET  &kp PLUS      &trans   &kp RSHIFT &kp RCTRL &kp RALT  &kp RMETA &trans 
   &kp LSHFT  &kp TILDE    &kp EXCL   &kp AT     &kp HASH   &kp PIPE       &trans   &trans     &trans    &trans    &trans    &trans
                          	        &kp LPAR   &kp RPAR   &kp UNDER      &trans   &trans     &trans
                        >;
                };
                fun_layer {
// -----------------------------------------------------------------------------------------
// |  TAB | F12 |  F7  |  F8  |  F9  | PSCRN |   |     |     |     |     |     | BKSP |
// | CTRL | F11 |  F4  |  F5  |  F6  | SLCK  |   |     |shift| ctrl| alt | meta|      |
// | SHFT | F10 |  F1  |  F2  |  F3  | Pause |   |     |     |     |     |     |      |
//                     | app  |  SPC |  TAB  |   |     |     |     |
                        bindings = <
   &kp TAB    &kp F12    &kp F7  &kp F8  &kp F9  &kp PSCRN          &trans   &trans     &trans    &trans    &trans    &kp BSPC
   &kp LCTRL  &kp F11    &kp F4  &kp F5  &kp F6  &kp SLCK           &trans   &kp RSHIFT &kp RCTRL &kp RALT  &kp RMETA &trans 
   &kp LSHFT  &kp F10    &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &trans   &trans     &trans    &trans    &trans    &trans
                          	        &kp K_APP   &kp SPACE   &kp TAB      &trans   &trans     &trans
                        >;
                };

/*                 lower_layer { */
/* // ----------------------------------------------------------------------------------------- */
/* // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP | */
/* // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      | */
/* // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      | */
/* //                    | GUI |     | SPC |   | ENT |     | ALT | */
/*                         bindings = < */
/*    &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC */
/*    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans */
/*    &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans */
/*                           	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT */
/*                         >; */
/*                 }; */

/*                 raise_layer { */
/* // ----------------------------------------------------------------------------------------- */
/* // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP | */
/* // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   | */
/* // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   | */
/* //                    | GUI |     | SPC |   | ENT |     | ALT | */
/*                         bindings = < */
/*    &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC */
/*    &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE */
/*    &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE */
/*                     	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT */
/*                         >; */
/*                 }; */

/*                 nav_layer { */
/* // ----------------------------------------------------------------------------------------- */
/* // |  TAB |     |     |     |     |     |   | REDO| PASTE| COPY | CUT  | UNDO |      | */
/* // | CTRL | META| CTRL| ALT |SHIFT|     |   | LEFT| DOWN | UP   | RIGHT| CAPS |      | */
/* // | SHFT |     |     |     |     |     |   | INS | HOME | PGDWN| PG_UP| END |      | */
/* //                    |     |     |     |   | ENT | BKSP| DEL | */
/*                         bindings = < */
/*    &kp TAB    &trans    &trans   &trans    &trans     &trans      &kp K_REDO   &kp K_PASTE &kp K_COPY   &kp K_CUT   &kp K_UNDO &trans */
/*    &kp CTRL   &kp LMETA &kp LALT &kp LCTRL &kp LSHIFT &trans      &kp LEFT     &kp DOWN    &kp UP       &kp RIGHT   &kp CAPS   &trans */
/*    &kp LSHFT  &trans    &trans   &trans    &trans     &trans      &kp INS      &kp HOME    &kp PG_UP    &kp PG_DN   &kp END    &trans */
/*                              &trans     &trans       &trans       &kp RET      &kp BSPC   &kp DEL  */
/*                         >; */
/*                 }; */
        };
};
